{
  "nodes": [
    {
      "id": "autoGPT_0",
      "position": {
        "x": 703.6893312998355,
        "y": 619.0140736892206
      },
      "type": "customNode",
      "data": {
        "id": "autoGPT_0",
        "label": "AutoGPT",
        "version": 2,
        "name": "autoGPT",
        "type": "AutoGPT",
        "baseClasses": [
          "AutoGPT"
        ],
        "category": "Agents",
        "description": "Autonomous agent with chain of thoughts for self-guided task completion",
        "inputParams": [
          {
            "label": "AutoGPT Name",
            "name": "aiName",
            "type": "string",
            "placeholder": "Tom",
            "optional": true,
            "id": "autoGPT_0-input-aiName-string"
          },
          {
            "label": "AutoGPT Role",
            "name": "aiRole",
            "type": "string",
            "placeholder": "Assistant",
            "optional": true,
            "id": "autoGPT_0-input-aiRole-string"
          },
          {
            "label": "Maximum Loop",
            "name": "maxLoop",
            "type": "number",
            "default": 5,
            "optional": true,
            "id": "autoGPT_0-input-maxLoop-number"
          }
        ],
        "inputAnchors": [
          {
            "label": "Allowed Tools",
            "name": "tools",
            "type": "Tool",
            "list": true,
            "id": "autoGPT_0-input-tools-Tool"
          },
          {
            "label": "Chat Model",
            "name": "model",
            "type": "BaseChatModel",
            "id": "autoGPT_0-input-model-BaseChatModel"
          },
          {
            "label": "Vector Store Retriever",
            "name": "vectorStoreRetriever",
            "type": "BaseRetriever",
            "id": "autoGPT_0-input-vectorStoreRetriever-BaseRetriever"
          },
          {
            "label": "Input Moderation",
            "description": "Detect text that could generate harmful output and prevent it from being sent to the language model",
            "name": "inputModeration",
            "type": "Moderation",
            "optional": true,
            "list": true,
            "id": "autoGPT_0-input-inputModeration-Moderation"
          }
        ],
        "inputs": {
          "tools": [
            "{{braveSearchAPI_0.data.instance}}"
          ],
          "model": "{{azureChatOpenAI_0.data.instance}}",
          "vectorStoreRetriever": "{{awsBedrockKBRetriever_0.data.instance}}",
          "aiName": "",
          "aiRole": "",
          "maxLoop": 5,
          "inputModeration": [
            "{{inputModerationOpenAI_0.data.instance}}"
          ]
        },
        "outputAnchors": [
          {
            "id": "autoGPT_0-output-autoGPT-AutoGPT",
            "name": "autoGPT",
            "label": "AutoGPT",
            "description": "Autonomous agent with chain of thoughts for self-guided task completion",
            "type": "AutoGPT"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 679,
      "selected": false,
      "positionAbsolute": {
        "x": 703.6893312998355,
        "y": 619.0140736892206
      },
      "dragging": false
    },
    {
      "id": "braveSearchAPI_0",
      "position": {
        "x": -88.51168129963543,
        "y": 392.67092723222885
      },
      "type": "customNode",
      "data": {
        "id": "braveSearchAPI_0",
        "label": "BraveSearch API",
        "version": 1,
        "name": "braveSearchAPI",
        "type": "BraveSearchAPI",
        "baseClasses": [
          "BraveSearchAPI",
          "Tool",
          "StructuredTool",
          "Runnable"
        ],
        "category": "Tools",
        "description": "Wrapper around BraveSearch API - a real-time API to access Brave search results",
        "inputParams": [
          {
            "label": "Connect Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "braveSearchApi"
            ],
            "id": "braveSearchAPI_0-input-credential-credential"
          }
        ],
        "inputAnchors": [],
        "inputs": {},
        "outputAnchors": [
          {
            "id": "braveSearchAPI_0-output-braveSearchAPI-BraveSearchAPI|Tool|StructuredTool|Runnable",
            "name": "braveSearchAPI",
            "label": "BraveSearchAPI",
            "description": "Wrapper around BraveSearch API - a real-time API to access Brave search results",
            "type": "BraveSearchAPI | Tool | StructuredTool | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 276,
      "selected": false,
      "positionAbsolute": {
        "x": -88.51168129963543,
        "y": 392.67092723222885
      },
      "dragging": false
    },
    {
      "id": "azureChatOpenAI_0",
      "position": {
        "x": -424.5441987319384,
        "y": 634.6839838285508
      },
      "type": "customNode",
      "data": {
        "id": "azureChatOpenAI_0",
        "label": "Azure ChatOpenAI",
        "version": 5,
        "name": "azureChatOpenAI",
        "type": "AzureChatOpenAI",
        "baseClasses": [
          "AzureChatOpenAI",
          "BaseChatModel",
          "BaseLanguageModel",
          "Runnable"
        ],
        "category": "Chat Models",
        "description": "Wrapper around Azure OpenAI large language models that use the Chat endpoint",
        "inputParams": [
          {
            "label": "Connect Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "azureOpenAIApi"
            ],
            "id": "azureChatOpenAI_0-input-credential-credential"
          },
          {
            "label": "Model Name",
            "name": "modelName",
            "type": "asyncOptions",
            "loadMethod": "listModels",
            "id": "azureChatOpenAI_0-input-modelName-asyncOptions"
          },
          {
            "label": "Temperature",
            "name": "temperature",
            "type": "number",
            "step": 0.1,
            "default": 0.9,
            "optional": true,
            "id": "azureChatOpenAI_0-input-temperature-number"
          },
          {
            "label": "Max Tokens",
            "name": "maxTokens",
            "type": "number",
            "step": 1,
            "optional": true,
            "additionalParams": true,
            "id": "azureChatOpenAI_0-input-maxTokens-number"
          },
          {
            "label": "Top Probability",
            "name": "topP",
            "type": "number",
            "step": 0.1,
            "optional": true,
            "additionalParams": true,
            "id": "azureChatOpenAI_0-input-topP-number"
          },
          {
            "label": "Frequency Penalty",
            "name": "frequencyPenalty",
            "type": "number",
            "step": 0.1,
            "optional": true,
            "additionalParams": true,
            "id": "azureChatOpenAI_0-input-frequencyPenalty-number"
          },
          {
            "label": "Presence Penalty",
            "name": "presencePenalty",
            "type": "number",
            "step": 0.1,
            "optional": true,
            "additionalParams": true,
            "id": "azureChatOpenAI_0-input-presencePenalty-number"
          },
          {
            "label": "Timeout",
            "name": "timeout",
            "type": "number",
            "step": 1,
            "optional": true,
            "additionalParams": true,
            "id": "azureChatOpenAI_0-input-timeout-number"
          },
          {
            "label": "BasePath",
            "name": "basepath",
            "type": "string",
            "optional": true,
            "additionalParams": true,
            "id": "azureChatOpenAI_0-input-basepath-string"
          },
          {
            "label": "Allow Image Uploads",
            "name": "allowImageUploads",
            "type": "boolean",
            "description": "Automatically uses gpt-4-vision-preview when image is being uploaded from chat. Only works with LLMChain, Conversation Chain, ReAct Agent, Conversational Agent, Tool Agent",
            "default": false,
            "optional": true,
            "id": "azureChatOpenAI_0-input-allowImageUploads-boolean"
          },
          {
            "label": "Image Resolution",
            "description": "This parameter controls the resolution in which the model views the image.",
            "name": "imageResolution",
            "type": "options",
            "options": [
              {
                "label": "Low",
                "name": "low"
              },
              {
                "label": "High",
                "name": "high"
              },
              {
                "label": "Auto",
                "name": "auto"
              }
            ],
            "default": "low",
            "optional": false,
            "additionalParams": true,
            "id": "azureChatOpenAI_0-input-imageResolution-options"
          }
        ],
        "inputAnchors": [
          {
            "label": "Cache",
            "name": "cache",
            "type": "BaseCache",
            "optional": true,
            "id": "azureChatOpenAI_0-input-cache-BaseCache"
          }
        ],
        "inputs": {
          "cache": "",
          "modelName": "",
          "temperature": 0.9,
          "maxTokens": "",
          "topP": "",
          "frequencyPenalty": "",
          "presencePenalty": "",
          "timeout": "",
          "basepath": "",
          "allowImageUploads": "",
          "imageResolution": "low"
        },
        "outputAnchors": [
          {
            "id": "azureChatOpenAI_0-output-azureChatOpenAI-AzureChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
            "name": "azureChatOpenAI",
            "label": "AzureChatOpenAI",
            "description": "Wrapper around Azure OpenAI large language models that use the Chat endpoint",
            "type": "AzureChatOpenAI | BaseChatModel | BaseLanguageModel | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 670,
      "selected": false,
      "positionAbsolute": {
        "x": -424.5441987319384,
        "y": 634.6839838285508
      },
      "dragging": false
    },
    {
      "id": "awsBedrockKBRetriever_0",
      "position": {
        "x": -342.71244578210303,
        "y": 1396.938057050635
      },
      "type": "customNode",
      "data": {
        "id": "awsBedrockKBRetriever_0",
        "label": "AWS Bedrock Knowledge Base Retriever",
        "version": 1,
        "name": "awsBedrockKBRetriever",
        "type": "AWSBedrockKBRetriever",
        "baseClasses": [
          "AWSBedrockKBRetriever",
          "BaseRetriever"
        ],
        "category": "Retrievers",
        "description": "Connect to AWS Bedrock Knowledge Base API and retrieve relevant chunks",
        "inputParams": [
          {
            "label": "AWS Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "awsApi"
            ],
            "optional": true,
            "id": "awsBedrockKBRetriever_0-input-credential-credential"
          },
          {
            "label": "Region",
            "name": "region",
            "type": "asyncOptions",
            "loadMethod": "listRegions",
            "default": "us-east-1",
            "id": "awsBedrockKBRetriever_0-input-region-asyncOptions"
          },
          {
            "label": "Knowledge Base ID",
            "name": "knoledgeBaseID",
            "type": "string",
            "id": "awsBedrockKBRetriever_0-input-knoledgeBaseID-string"
          },
          {
            "label": "Query",
            "name": "query",
            "type": "string",
            "description": "Query to retrieve documents from retriever. If not specified, user question will be used",
            "optional": true,
            "acceptVariable": true,
            "id": "awsBedrockKBRetriever_0-input-query-string"
          },
          {
            "label": "TopK",
            "name": "topK",
            "type": "number",
            "description": "Number of chunks to retrieve",
            "optional": true,
            "additionalParams": true,
            "default": 5,
            "id": "awsBedrockKBRetriever_0-input-topK-number"
          },
          {
            "label": "SearchType",
            "name": "searchType",
            "type": "options",
            "description": "Knowledge Base search type. Possible values are HYBRID and SEMANTIC. If not specified, default will be used. Consult AWS documentation for more",
            "options": [
              {
                "label": "HYBRID",
                "name": "HYBRID",
                "description": "Hybrid seach type"
              },
              {
                "label": "SEMANTIC",
                "name": "SEMANTIC",
                "description": "Semantic seach type"
              }
            ],
            "optional": true,
            "additionalParams": true,
            "id": "awsBedrockKBRetriever_0-input-searchType-options"
          },
          {
            "label": "Filter",
            "name": "filter",
            "type": "string",
            "description": "Knowledge Base retrieval filter. Read documentation for filter syntax",
            "optional": true,
            "additionalParams": true,
            "id": "awsBedrockKBRetriever_0-input-filter-string"
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "region": "us-east-1",
          "knoledgeBaseID": "",
          "query": "",
          "topK": 5,
          "searchType": "",
          "filter": ""
        },
        "outputAnchors": [
          {
            "id": "awsBedrockKBRetriever_0-output-awsBedrockKBRetriever-AWSBedrockKBRetriever|BaseRetriever",
            "name": "awsBedrockKBRetriever",
            "label": "AWSBedrockKBRetriever",
            "description": "Connect to AWS Bedrock Knowledge Base API and retrieve relevant chunks",
            "type": "AWSBedrockKBRetriever | BaseRetriever"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 622,
      "selected": false,
      "positionAbsolute": {
        "x": -342.71244578210303,
        "y": 1396.938057050635
      },
      "dragging": false
    },
    {
      "id": "inputModerationOpenAI_0",
      "position": {
        "x": 273.6373530315513,
        "y": 1826.6418150936008
      },
      "type": "customNode",
      "data": {
        "id": "inputModerationOpenAI_0",
        "label": "OpenAI Moderation",
        "version": 1,
        "name": "inputModerationOpenAI",
        "type": "Moderation",
        "baseClasses": [
          "Moderation"
        ],
        "category": "Moderation",
        "description": "Check whether content complies with OpenAI usage policies.",
        "inputParams": [
          {
            "label": "Connect Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "openAIApi"
            ],
            "id": "inputModerationOpenAI_0-input-credential-credential"
          },
          {
            "label": "Error Message",
            "name": "moderationErrorMessage",
            "type": "string",
            "rows": 2,
            "default": "Cannot Process! Input violates OpenAI's content moderation policies.",
            "optional": true,
            "id": "inputModerationOpenAI_0-input-moderationErrorMessage-string"
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "moderationErrorMessage": "Cannot Process! Input violates OpenAI's content moderation policies."
        },
        "outputAnchors": [
          {
            "id": "inputModerationOpenAI_0-output-inputModerationOpenAI-Moderation",
            "name": "inputModerationOpenAI",
            "label": "Moderation",
            "description": "Check whether content complies with OpenAI usage policies.",
            "type": "Moderation"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 453,
      "selected": false,
      "positionAbsolute": {
        "x": 273.6373530315513,
        "y": 1826.6418150936008
      },
      "dragging": false
    }
  ],
  "edges": [
    {
      "source": "braveSearchAPI_0",
      "sourceHandle": "braveSearchAPI_0-output-braveSearchAPI-BraveSearchAPI|Tool|StructuredTool|Runnable",
      "target": "autoGPT_0",
      "targetHandle": "autoGPT_0-input-tools-Tool",
      "type": "buttonedge",
      "id": "braveSearchAPI_0-braveSearchAPI_0-output-braveSearchAPI-BraveSearchAPI|Tool|StructuredTool|Runnable-autoGPT_0-autoGPT_0-input-tools-Tool"
    },
    {
      "source": "azureChatOpenAI_0",
      "sourceHandle": "azureChatOpenAI_0-output-azureChatOpenAI-AzureChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
      "target": "autoGPT_0",
      "targetHandle": "autoGPT_0-input-model-BaseChatModel",
      "type": "buttonedge",
      "id": "azureChatOpenAI_0-azureChatOpenAI_0-output-azureChatOpenAI-AzureChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable-autoGPT_0-autoGPT_0-input-model-BaseChatModel"
    },
    {
      "source": "awsBedrockKBRetriever_0",
      "sourceHandle": "awsBedrockKBRetriever_0-output-awsBedrockKBRetriever-AWSBedrockKBRetriever|BaseRetriever",
      "target": "autoGPT_0",
      "targetHandle": "autoGPT_0-input-vectorStoreRetriever-BaseRetriever",
      "type": "buttonedge",
      "id": "awsBedrockKBRetriever_0-awsBedrockKBRetriever_0-output-awsBedrockKBRetriever-AWSBedrockKBRetriever|BaseRetriever-autoGPT_0-autoGPT_0-input-vectorStoreRetriever-BaseRetriever"
    },
    {
      "source": "inputModerationOpenAI_0",
      "sourceHandle": "inputModerationOpenAI_0-output-inputModerationOpenAI-Moderation",
      "target": "autoGPT_0",
      "targetHandle": "autoGPT_0-input-inputModeration-Moderation",
      "type": "buttonedge",
      "id": "inputModerationOpenAI_0-inputModerationOpenAI_0-output-inputModerationOpenAI-Moderation-autoGPT_0-autoGPT_0-input-inputModeration-Moderation"
    }
  ]
}